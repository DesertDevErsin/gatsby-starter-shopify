{"version":3,"file":"component---src-pages-products-shopify-product-product-type-index-jsx-7b6f33254ae7f046fd26.js","mappings":"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","sources":["webpack://gatsby-starter-shopify/src/get-shopify-image.ts","webpack://gatsby-starter-shopify/src/index.ts","webpack://gatsby-starter-shopify/./src/components/product-card.jsx","webpack://gatsby-starter-shopify/./src/components/product-card.module.css","webpack://gatsby-starter-shopify/./src/components/product-listing.jsx","webpack://gatsby-starter-shopify/./src/components/product-listing.module.css","webpack://gatsby-starter-shopify/./src/components/more-button.module.css","webpack://gatsby-starter-shopify/./src/components/more-button.jsx","webpack://gatsby-starter-shopify/./src/pages/products/{ShopifyProduct.productType}/index.jsx","webpack://gatsby-starter-shopify/./src/pages/products/index.module.css","webpack://gatsby-starter-shopify/./src/utils/format-price.js"],"sourcesContent":[null,null,"import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { getShopifyImage } from \"gatsby-source-shopify\"\nimport { formatPrice } from \"../utils/format-price\"\nimport {\n  productCardStyle,\n  productHeadingStyle,\n  productImageStyle,\n  productDetailsStyle,\n  productVendorStyle,\n  productPrice,\n} from \"./product-card.module.css\"\n\nexport function ProductCard({ product, eager }) {\n  const {\n    title,\n    priceRangeV2,\n    slug,\n    images: [firstImage],\n    vendor,\n    storefrontImages,\n  } = product\n\n  const price = formatPrice(\n    priceRangeV2.minVariantPrice.currencyCode,\n    priceRangeV2.minVariantPrice.amount\n  )\n\n  const defaultImageHeight = 200\n  const defaultImageWidth = 200\n  let storefrontImageData = {}\n  if (storefrontImages) {\n    const storefrontImage = storefrontImages.edges[0].node\n    try {\n      storefrontImageData = getShopifyImage({\n        image: storefrontImage,\n        layout: \"fixed\",\n        width: defaultImageWidth,\n        height: defaultImageHeight,\n      })\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const hasImage = firstImage || Object.getOwnPropertyNames(storefrontImageData || {}).length\n\n  return (\n    <Link\n      className={productCardStyle}\n      to={slug}\n      aria-label={`View ${title} product page`}\n    >\n      {hasImage\n        ? (\n          <div className={productImageStyle} data-name=\"product-image-box\">\n            <GatsbyImage\n              alt={firstImage?.altText ?? title}\n              image={firstImage?.gatsbyImageData ?? storefrontImageData}\n              loading={eager ? \"eager\" : \"lazy\"}\n            />\n          </div>\n        ) : (\n          <div style={{ height: defaultImageHeight, width: defaultImageWidth }} />\n        )\n      }\n      <div className={productDetailsStyle}>\n        <div className={productVendorStyle}>{vendor}</div>\n        <h2 as=\"h2\" className={productHeadingStyle}>\n          {title}\n        </h2>\n        <div className={productPrice}>{price}</div>\n      </div>\n    </Link>\n  )\n}\n\nexport const query = graphql`\n  fragment ProductCard on ShopifyProduct {\n    id\n    title\n    slug: gatsbyPath(\n      filePath: \"/products/{ShopifyProduct.productType}/{ShopifyProduct.handle}\"\n    )\n    images {\n      id\n      altText\n      gatsbyImageData(aspectRatio: 1, width: 640)\n    }\n    priceRangeV2 {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    vendor\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var productCardStyle = \"product-card-module--productCardStyle--23lnc\";\nexport var productImageStyle = \"product-card-module--productImageStyle--E6wVT\";\nexport var productDetailsStyle = \"product-card-module--productDetailsStyle--2N58r\";\nexport var productVendorStyle = \"product-card-module--productVendorStyle--dbtlX\";\nexport var productHeadingStyle = \"product-card-module--productHeadingStyle--ZH28N\";\nexport var productPrice = \"product-card-module--productPrice--HRUSo\";","import * as React from \"react\"\nimport { ProductCard } from \"./product-card\"\nimport { listingContainerStyle } from \"./product-listing.module.css\"\n\n// To optimize LCP we mark the first product card as eager so the image gets loaded faster\nexport function ProductListing({ products = [] }) {\n  return (\n    <div className={listingContainerStyle}>\n      {products.map((p, index) => (\n        <ProductCard product={p} key={p.id} eager={index === 0} />\n      ))}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var listingContainerStyle = \"product-listing-module--listingContainerStyle--VRTI+\";","// extracted by mini-css-extract-plugin\nexport var moreButton = \"more-button-module--moreButton--5OGIm\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { moreButton } from \"./more-button.module.css\"\n\nexport function MoreButton({ className, ...props }) {\n  return <Link className={[className, moreButton].join(\" \")} {...props} />\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Layout } from \"../../../components/layout\"\nimport { ProductListing } from \"../../../components/product-listing\"\nimport { Seo } from \"../../../components/seo\"\nimport slugify from \"@sindresorhus/slugify\"\nimport { MoreButton } from \"../../../components/more-button\"\nimport { title } from \"../index.module.css\"\n\nexport default function ProductTypeIndex({\n  data: { products },\n  pageContext: { productType },\n}) {\n  return (\n    <Layout>\n      <Seo title={`Category: ${productType}`} />\n      <h1 className={title}>{productType}</h1>\n      <ProductListing products={products.nodes} />\n      {products.pageInfo.hasNextPage && (\n        <MoreButton to={`/search?p=${slugify(productType)}#more`}>\n          More Products\n        </MoreButton>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($productType: String!) {\n    products: allShopifyProduct(\n      filter: { productType: { eq: $productType } }\n      sort: { fields: publishedAt, order: ASC }\n      limit: 24\n    ) {\n      nodes {\n        ...ProductCard\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var title = \"index-module--title--AHsrX\";","/**\n * Formats a currency according to the user's locale\n * @param {string} currency The ISO currency code\n * @param {number} value The amount to format\n * @returns\n */\nexport const formatPrice = (currency, value) =>\n  Intl.NumberFormat(\"en-US\", {\n    currency,\n    minimumFractionDigits: 2,\n    style: \"currency\",\n  }).format(value)\n\nexport const getCurrencySymbol = (currency, locale = undefined) => {\n  if (!currency) {\n    return\n  }\n\n  const formatter = Intl.NumberFormat(locale, {\n    currency,\n    style: \"currency\",\n  })\n  const parts = formatter.formatToParts(100)\n  const { value: symbol } = parts.find((part) => part.type === \"currency\")\n  const formatted = formatter.format(100)\n  const symbolAtEnd = formatted.endsWith(symbol)\n  return { symbol, symbolAtEnd }\n}\n"],"names":["validFormats","Set","urlBuilder","width","height","baseUrl","format","has","console","warn","join","split","basename","version","dot","lastIndexOf","ext","slice","exports","_a","image","args","__rest","originalSrc","sourceWidth","sourceHeight","Object","formats","ProductCard","product","eager","title","priceRangeV2","slug","firstImage","images","vendor","storefrontImages","price","formatPrice","minVariantPrice","currencyCode","amount","storefrontImageData","storefrontImage","edges","node","getShopifyImage","layout","e","error","hasImage","getOwnPropertyNames","length","className","to","G","alt","altText","gatsbyImageData","loading","style","as","ProductListing","products","map","p","index","key","id","moreButton","MoreButton","props","ProductTypeIndex","data","productType","pageContext","nodes","pageInfo","hasNextPage","slugify","currency","value","Intl","NumberFormat","minimumFractionDigits","getCurrencySymbol","locale","undefined","formatter","symbol","formatToParts","find","part","type","symbolAtEnd","endsWith"],"sourceRoot":""}